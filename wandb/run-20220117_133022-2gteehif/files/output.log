[13:30:24|metareasoning_env             |reset     |INFO ] Built the earth observation MDP: [states=288, actions=4, time=0.000064]
[13:30:24|metareasoning_env             |reset     |INFO ] Built the abstract earth observation MDP: [states=8, actions=4, time=0.151350]
[13:30:24|metareasoning_env             |reset     |INFO ] Solved the abstract earth observation MDP: [states=8, actions=4, time=0.013210]
[13:30:24|metareasoning_env             |reset     |INFO ] Initialized the current ground state: [0]
[13:30:24|metareasoning_env             |reset     |INFO ] Initialized the current abstract state: [abstract_0_0]
[13:30:24|metareasoning_env             |reset     |INFO ] Activating the simulator...
[13:30:25|metareasoning_env             |step      |INFO ] Encountered a new abstract state: [abstract_0_0]
[13:30:25|metareasoning_env             |step      |INFO ] Starting the policy sketch refine algorithm...
[13:30:25|policy_sketch_refine          |solve     |INFO ] Starting the sketch phase...
[13:30:25|policy_sketch_refine          |solve     |INFO ] Finished the sketch phase: [time=0.008480]
[13:30:25|policy_sketch_refine          |solve     |INFO ] Starting the refine phase...
[13:30:25|policy_sketch_refine          |refine    |INFO ] Enabled point of interest abstract state expansion: [abstract_states=[(5, 1), (0, 2)]]
[13:30:25|policy_sketch_refine          |refine    |INFO ] Built the PAMDP: [states=78, actions=4, time=0.090937]
[13:30:25|policy_sketch_refine          |refine    |INFO ] Initialized state information: [constants=6, variables=2]
[13:30:25|policy_sketch_refine          |refine    |INFO ] Ran the CPLEX solver: [time=0.290739]
[13:30:25|policy_sketch_refine          |refine    |INFO ] Found a feasible solution to the PAMDP
[13:30:25|policy_sketch_refine          |solve     |INFO ] Finished the refine phase: [time=0.382515]
[13:30:25|metareasoning_env             |step      |INFO ] Finished the policy sketch refine algorithm: [time=0.391238]
[13:30:25|metareasoning_env             |step      |INFO ] Calculated the values from the solution of policy sketch refine: [time=0.000172]
[13:30:25|metareasoning_env             |step      |INFO ] Calculated the ground states for the current abstract state: [time=0.000002]
[13:30:25|metareasoning_env             |step      |INFO ] Calculated the policy from the values: [time=0.017229]
[13:30:25|metareasoning_env             |step      |INFO ] Cached the ground states for the new abstract state: [abstract_0_0]
[13:30:25|metareasoning_env             |step      |INFO ] Current Ground State: [0]
[13:30:25|metareasoning_env             |step      |INFO ] Current Abstract State: [abstract_0_0]
[13:30:25|metareasoning_env             |step      |INFO ] Current Action: [SOUTH]
[13:30:25|metareasoning_env             |step      |INFO ] Current Ground State: [68]
[13:30:25|metareasoning_env             |step      |INFO ] Current Abstract State: [abstract_0_0]
[13:30:25|metareasoning_env             |step      |INFO ] Current Action: [NORTH]
Partially Abstract Start State Probabilities: [###########################################################-] 98.7%
Traceback (most recent call last):
  File "metareasoning_trainer.py", line 89, in <module>
    main()
  File "metareasoning_trainer.py", line 41, in main
    next_observation, reward, done, _ = ENVIRONMENT.step(action.item())
  File "/Users/justinsvegliato/Documents/Development/metareasoning-for-state-abstractions/metareasoning_env.py", line 99, in step
    return self.__get_observation(), self.__get_reward(), self.__get_done(), None
  File "/Users/justinsvegliato/Documents/Development/metareasoning-for-state-abstractions/metareasoning_env.py", line 165, in __get_observation
    quality = self.__get_simulated_cumulative_reward() / self.__get_maximum_cumulative_reward()
  File "/Users/justinsvegliato/Documents/Development/metareasoning-for-state-abstractions/metareasoning_env.py", line 145, in __get_simulated_cumulative_reward
    simulated_ground_state = utils.get_successor_state(simulated_ground_state, simulated_action, self.ground_mdp)
  File "/Users/justinsvegliato/Documents/Development/metareasoning-for-state-abstractions/utils.py", line 77, in get_successor_state
    if transition_probability == 0:
KeyboardInterrupt